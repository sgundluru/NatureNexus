// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NatureNexus.Data;

#nullable disable

namespace NatureNexus.Migrations
{
    [DbContext(typeof(NatureNexusContext))]
    [Migration("20240427012838_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NatureNexus.Models.Activity", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("NatureNexus.Models.Park", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("parkCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Parks");
                });

            modelBuilder.Entity("NatureNexus.Models.ParkActivity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("activityID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("parkID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.HasIndex("activityID");

                    b.HasIndex("parkID");

                    b.ToTable("ParkActivities");
                });

            modelBuilder.Entity("NatureNexus.Models.ParkTopic", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("parkID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("topicID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.HasIndex("parkID");

                    b.HasIndex("topicID");

                    b.ToTable("ParkTopics");
                });

            modelBuilder.Entity("NatureNexus.Models.State", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("States");
                });

            modelBuilder.Entity("NatureNexus.Models.StatePark", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("parkID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("stateID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.HasIndex("parkID");

                    b.HasIndex("stateID");

                    b.ToTable("StateParks");
                });

            modelBuilder.Entity("NatureNexus.Models.Topic", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Topics");
                });

            modelBuilder.Entity("NatureNexus.Models.ParkActivity", b =>
                {
                    b.HasOne("NatureNexus.Models.Activity", "activity")
                        .WithMany("parks")
                        .HasForeignKey("activityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NatureNexus.Models.Park", "park")
                        .WithMany("activities")
                        .HasForeignKey("parkID");

                    b.Navigation("activity");

                    b.Navigation("park");
                });

            modelBuilder.Entity("NatureNexus.Models.ParkTopic", b =>
                {
                    b.HasOne("NatureNexus.Models.Park", "park")
                        .WithMany("topics")
                        .HasForeignKey("parkID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NatureNexus.Models.Topic", "topic")
                        .WithMany("parks")
                        .HasForeignKey("topicID");

                    b.Navigation("park");

                    b.Navigation("topic");
                });

            modelBuilder.Entity("NatureNexus.Models.StatePark", b =>
                {
                    b.HasOne("NatureNexus.Models.Park", "park")
                        .WithMany("states")
                        .HasForeignKey("parkID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NatureNexus.Models.State", "state")
                        .WithMany("parks")
                        .HasForeignKey("stateID");

                    b.Navigation("park");

                    b.Navigation("state");
                });

            modelBuilder.Entity("NatureNexus.Models.Activity", b =>
                {
                    b.Navigation("parks");
                });

            modelBuilder.Entity("NatureNexus.Models.Park", b =>
                {
                    b.Navigation("activities");

                    b.Navigation("states");

                    b.Navigation("topics");
                });

            modelBuilder.Entity("NatureNexus.Models.State", b =>
                {
                    b.Navigation("parks");
                });

            modelBuilder.Entity("NatureNexus.Models.Topic", b =>
                {
                    b.Navigation("parks");
                });
#pragma warning restore 612, 618
        }
    }
}
